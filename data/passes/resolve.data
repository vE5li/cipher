#functions { resolve { assign [ [ #single self ] [ #single namespace [ path ] ] #pass [ #scope:self:entries:type ] [ #scope:namespace ] #modify [ #data #scope:_0 ] [ #last ] #modify [ #data #scope:self:entries:type ] [ #scope:_0 ] #pass [ #scope:self:entries:value ] #modify [ #data #scope:_1 ] [ #last ] #modify [ #data #scope:self:entries:value ] [ #scope:_1 ] #return [ #scope:self:entries ] ] boolean [ [ #single self ] #return [ #scope:self:entries:state ] ] immediate [ [ #single self ] #pass [ #scope:self:entries:value ] #return [ #last ] ] instance [ [ #single self ] #pass [ #scope:self:entries:data ] #return [ #last ] ] integer_type [ [ #single self ] [ #single namespace ] #string [ #data "resolving integer type " ] [ #scope:self:entries:size ] #modify [ #data #scope:_0 ] [ #last ] #print_line [ #scope:_0 ] #return [ #scope:self:entries:size ] ] native [ [ #single self ] [ #single namespace [ path ] ] #string [ #data "resolving native type " ] [ #scope:self:entries:identifier ] [ #data " in namespace " ] [ #scope:namespace ] #modify [ #data #scope:_0 ] [ #last ] #print_line [ #scope:_0 ] #pass [ #scope:self:entries:type ] [ #scope:namespace ] #modify [ #data #scope:_1 ] [ #last ] #modify [ #data #scope:alias ] [ #scope:_1 ] #map [ #data type ] [ #data alias ] [ #data alias ] [ #scope:alias ] #return [ #last ] ] number [ [ #single self ] #if [ #data #true ] [ #scope:self:entries:negative ] #negate [ #scope:self:entries:value ] #return [ #last ] #end #return [ #scope:self:entries:value ] ] reference_type [ [ #single self ] [ #single namespace ] #string [ #data "resolving reference type " ] [ #scope:self:entries:type_identifier ] [ #data " in namespace " ] [ #scope:namespace ] #modify [ #data #scope:_0 ] [ #last ] #print_line [ #scope:_0 ] #string [ #scope:self:entries:type_identifier ] #modify [ #data #scope:_1 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_1 ] #boolean [ #data #present ] [ #scope:self:entries ] [ #data subtypes ] #if [ #data #true ] [ #last ] #string [ #scope:concrete_name ] [ #data "<" ] #modify [ #data #scope:_2 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_2 ] #iterate [ #scope:self:entries:subtypes ] #modify [ #data #scope:index ] [ #last:key ] [ #data #scope:subtype ] [ #last:value ] #pass [ #scope:subtype:item ] [ #scope:namespace ] #modify [ #data #scope:_3 ] [ #last ] #modify [ #data #scope:subtype ] [ #scope:_3 ] #boolean [ #data #equals ] [ #scope:subtype:instance_type ] [ #data image ] #if [ #data #true ] [ #last ] #string [ #scope:concrete_name ] [ #data "$" ] #modify [ #data #scope:_4 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_4 ] #else #boolean [ #data #equals ] [ #scope:subtype:instance_type ] [ #data mirror ] #if [ #data #true ] [ #last ] #string [ #scope:concrete_name ] [ #data "&" ] #modify [ #data #scope:_5 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_5 ] #end #end #string [ #scope:concrete_name ] [ #scope:subtype:real_type ] #modify [ #data #scope:_6 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_6 ] #length [ #scope:self:entries:subtypes ] #modify [ #data #scope:_7 ] [ #last ] #boolean [ #data #smaller ] [ #scope:index ] [ #scope:_7 ] #if [ #data #true ] [ #last ] #string [ #scope:concrete_name ] [ #data ", " ] #modify [ #data #scope:_8 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_8 ] #end #end #string [ #scope:concrete_name ] [ #data ">" ] #modify [ #data #scope:_9 ] [ #last ] #modify [ #data #scope:concrete_name ] [ #scope:_9 ] #print_line [ #scope:concrete_name ] #end #path [ #scope:namespace ] [ #data types ] [ #scope:concrete_name ] #return [ #last ] ] structure [ [ #single self ] [ #single namespace [ path ] ] #boolean [ #data #present ] [ #scope:self:entries ] [ #data type ] #if [ #data #true ] [ #last ] #pass [ #scope:self:entries:type ] [ #scope:namespace ] #modify [ #data #scope:_0 ] [ #last ] #modify [ #data #scope:alias ] [ #scope:_0 ] #map [ #data type ] [ #data alias ] [ #data alias ] [ #scope:alias ] #return [ #last ] #end #modify [ #data #scope:resolved_fields ] [ #data [ ] ] #iterate [ #scope:self:entries:fields ] #modify [ #data #scope:index ] [ #last:key ] [ #data #scope:field ] [ #last:value ] #pass [ #scope:field:item ] [ #scope:namespace ] #modify [ #data #scope:_1 ] [ #last ] #modify [ #data #scope:resolved_field ] [ #scope:_1 ] #modify [ #data #scope:field_entries ] [ #scope:resolved_field:entries ] #append [ #scope:resolved_fields ] [ #scope:field_entries ] #modify [ #data #scope:_2 ] [ #last ] #modify [ #data #scope:resolved_fields ] [ #scope:_2 ] #end #map [ #data type ] [ #data structure ] [ #data fields ] [ #scope:resolved_fields ] #return [ #last ] ] top [ [ #single self ] #error [ #data "done!" ] #print_line [ #data "[ pass ] resolve" ] #pass [ #build:namespace ] [ #data #build:namespace ] #modify [ #data #scope:_0 ] [ #last ] #modify [ #data #build:namespace ] [ #scope:_0 ] #return [ #scope:self ] ] type [ [ #single self ] [ #single namespace [ path ] ] #pass [ #scope:self:entries:data ] [ #scope:namespace ] #modify [ #data #scope:_0 ] [ #last ] #modify [ #data #scope:data ] [ #scope:_0 ] #pass [ #scope:self:entries:real_type ] [ #scope:namespace ] #modify [ #data #scope:_1 ] [ #last ] #modify [ #data #scope:real_type ] [ #scope:_1 ] #modify [ #data #scope:instance_type ] [ #scope:self:entries:instance_type ] #map [ #data real_type ] [ #scope:real_type ] [ #data instance_type ] [ #scope:instance_type ] #return [ #last ] ] } } 