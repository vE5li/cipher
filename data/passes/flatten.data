#functions { flatten { entries [ [ #single entries [ map ] ] [ #single prefix [ string ] ] #iterate [ #scope:entries:types ] #modify [ #data #scope:identifier ] [ #last:key ] [ #data #scope:entry ] [ #last:value ] #string [ #scope:prefix ] [ #scope:identifier ] #modify [ #data #scope:_0 ] [ #last ] #insert [ #build:types ] [ #scope:_0 ] [ #data 0 ] #modify [ #data #build:types ] [ #last ] #string [ #data "flattening type to " ] [ #scope:prefix ] [ #scope:identifier ] #modify [ #data #scope:_1 ] [ #last ] #print_line [ #scope:_1 ] #end #iterate [ #scope:entries:labels ] #modify [ #data #scope:identifier ] [ #last:key ] [ #data #scope:entry ] [ #last:value ] #string [ #scope:prefix ] [ #scope:identifier ] #modify [ #data #scope:_2 ] [ #last ] #insert [ #build:labels ] [ #scope:_2 ] [ #data 0 ] #modify [ #data #build:labels ] [ #last ] #string [ #data "flattening label to " ] [ #scope:prefix ] [ #scope:identifier ] #modify [ #data #scope:_3 ] [ #last ] #print_line [ #scope:_3 ] #end #iterate [ #scope:entries:namespaces ] #modify [ #data #scope:identifier ] [ #last:key ] [ #data #scope:namespace_entries ] [ #last:value ] #string [ #scope:prefix ] [ #scope:identifier ] [ #data "::" ] #modify [ #data #scope:_4 ] [ #last ] #call [ #data flatten:entries ] [ #scope:namespace_entries ] [ #scope:_4 ] #end ] top [ [ #single self ] #print_line [ #data "[ pass ] flatten" ] #modify [ #data #build:types ] [ #data { } ] #modify [ #data #build:labels ] [ #data { } ] #call [ #data flatten:entries ] [ #build:scope ] [ #data "" ] #return [ #scope:self ] ] } } 